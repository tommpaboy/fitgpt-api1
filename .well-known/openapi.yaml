openapi: 3.1.0
info:
  title: FitGPT API
  version: 2.1.0
  description: |
    API som kombinerar Fitbit-data (inkl. sömn & HRV) med manuellt loggade
    måltider och träningspass.

    **Huvud-endpointen för GPT** är `/sammanfatta` (eller `/sammanfatta/{alias}`).
    Den returnerar samma JSON som gamla `/data/daily-summary`, men är enklare
    att anropa i en konversation.
servers:
  - url: https://fitgpt-2364.onrender.com

paths:
  /sammanfatta:
    get:
      summary: Dagens sammanfattning (Fitbit + Firestore)
      operationId: getSummaryToday
      parameters:
        - in: query
          name: days_back
          description: Hämta X dagar bakåt (0 = idag, 1 = igår …)
          schema:
            type: integer
            minimum: 0
        - in: query
          name: fresh
          description: true → hoppa cache
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /sammanfatta/{datum}:
    get:
      summary: Sammanfattning för explicit datum eller alias
      operationId: getSummaryByDate
      parameters:
        - in: path
          name: datum
          required: true
          description: YYYY-MM-DD eller alias (idag|igår|förrgår)
          schema:
            type: string
        - in: query
          name: fresh
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /time:
    get:
      summary: Hämta aktuell tid i Europe/Stockholm
      operationId: getTime
      description: Returnerar aktuell tid som ISO 8601-sträng i tidszonen Europe/Stockholm.
      responses:
        "200":
          description: Tidspunkt i ISO-format
          content:
            application/json:
              schema:
                type: object
                properties:
                  time:
                    type: string
                    format: date-time
                    example: 2025-07-08T22:34:00+02:00

  /v1/summaries/daily:
    get:
      summary: Daglig snapshot (cachad, ETag, stabil nyckel)
      operationId: getDailySnapshot
      parameters:
        - in: query
          name: date
          required: true
          description: Datum (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          headers:
            ETag:
              description: Snapshot-version
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailySnapshot"
        "304":
          description: Oförändrad sedan angivet ETag
        "404":
          description: Snapshot saknas
      x-openai-isConsequential: false

  /data/daily-summary:
    get:
      summary: "**DEPRECATED** – använd /sammanfatta"
      deprecated: true
      operationId: getDailySummaryLegacy
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
        - in: query
          name: fresh
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /daily-summary:
    get:
      summary: "**DEPRECATED** – använd /sammanfatta"
      deprecated: true
      operationId: getDailySummaryLegacyDuplicate
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
        - in: query
          name: fresh
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /data/extended/full:
    get:
      summary: Fitbit + Firestore för flera dagar
      operationId: getExtendedFull
      parameters:
        - in: query
          name: days
          schema:
            type: integer
            minimum: 1
            default: 3
        - in: query
          name: fresh
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /data/steps:
    get:
      summary: Steg för datum
      operationId: getSteps
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /data/sleep:
    get:
      summary: Sömn för datum
      operationId: getSleep
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /data/heart:
    get:
      summary: Puls för datum
      operationId: getHeart
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /data/calories:
    get:
      summary: Förbrända kalorier för datum
      operationId: getCalories
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: false

  /log/meal:
    post:
      summary: Logga måltid (lista av strängar)
      operationId: logMeal
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MealLog"
            examples:
              enkel:
                value:
                  date: "2025-08-16"
                  meal: "frukost"
                  items:
                    - "proteinshake (200 kcal, 27 g protein)"
                    - "ägg x4 (230 kcal, 20 g protein)"
                  estimated_calories: 430
              batch:
                value:
                  date: "2025-08-16"
                  items:
                    - "2 små Chicken Burgers (580 kcal, 32 g protein)"
                    - "2× GB Sandwich (410 kcal, 6 g protein)"
      responses:
        "201":
          description: Meals logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  inserted_ids:
                    type: array
                    items:
                      type: string
                  warnings:
                    type: array
                    items:
                      type: string
              examples:
                ok:
                  value:
                    ok: true
                    inserted_ids: ["meal_2025-08-16_0","meal_2025-08-16_1"]
                    warnings: []
      x-openai-isConsequential: true
    get:
      summary: Hämta måltider för datum
      operationId: getMeals
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MealLog"
      x-openai-isConsequential: false

  /log/workout:
    post:
      summary: Logga träningspass
      operationId: postWorkoutNew
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkoutLog"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericObject"
      x-openai-isConsequential: true
    get:
      summary: Hämta pass för datum
      operationId: getWorkouts
      parameters:
        - in: query
          name: date
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkoutLog"
      x-openai-isConsequential: false

  /health:
    get:
      summary: Deploy-hälsokontroll
      operationId: getHealth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  time:
                    type: string
      x-openai-isConsequential: false

  /_echo:
    post:
      summary: Eko POST (diagnostik)
      operationId: postEcho
      security:
        - BearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
            examples:
              ping:
                value:
                  ping: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                  received:
                    type: object
                    additionalProperties: true
              examples:
                ok:
                  value:
                    ok: true
                    received:
                      ping: 1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    GenericObject:
      type: object
      additionalProperties: true
      properties:
        date:
          type: string
          format: date
        kcal_in:
          type: integer
        kcal_out:
          type: integer
          nullable: true
        is_estimate:
          type: boolean
        sleep:
          type: object
          nullable: true
          properties:
            minutes:
              type: integer
            efficiency:
              type: integer
        hrv:
          type: integer
          nullable: true
        meals:
          type: array
          items:
            $ref: "#/components/schemas/MealLog"
        workouts:
          type: array
          items:
            $ref: "#/components/schemas/WorkoutLog"

    DailySnapshot:
      allOf:
        - $ref: "#/components/schemas/GenericObject"
        - type: object
          properties:
            updated_at:
              type: string
              format: date-time

    MealLog:
      type: object
      required:
        - date
        - items
      properties:
        date:
          type: string
          format: date
          example: "2025-08-16"
        meal:
          type: string
          nullable: true
          example: "lunch"
        items:
          type: array
          items:
            type: string
          example:
            - "proteinshake (200 kcal, 27 g protein)"
            - "ägg x4 (230 kcal, 20 g protein)"
        estimated_calories:
          type: integer
          nullable: true
          example: 430

    WorkoutLog:
      type: object
      required:
        - date
        - type
        - details
      properties:
        date:
          type: string
          format: date
        type:
          type: string
        details:
          type: string
        start_time:
          type: string
          format: date-time
          nullable: true
