openapi: 3.1.0
info:
  title: FitGPT API
  version: "1.1.4"
  description: |
    API för att hämta och analysera Fitbit-data – steg, kalorier, sömn, puls,
    vikt, HRV och loggade träningspass, samt logga egna måltider och pass.

    • `/daily-summary`  – all dagsdata i ett anrop  
    • `/data`           – snabb Fitbit-sammanfattning  
    • `/data/extended`  – djupare Fitbit-insikt  
    • `/log/meal`       – logga / hämta måltider  
    • `/log/workout`    – logga / hämta träningspass
servers:
  - url: https://fitgpt-2364.onrender.com

paths:
  /daily-summary:
    get:
      summary: Samlad dagsdata (Fitbit + manuella loggar)
      operationId: getDailySummary
      parameters:
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Datum (YYYY-MM-DD). Default = idag.
      responses:
        "200":
          description: Fitbitdata, måltider och träningspass för angivet datum
          content:
            application/json:
              schema:
                type: object
      x-openai-isConsequential: false

  /data:
    get:
      summary: Hämta sammanfattad Fitbit-data
      operationId: getCombinedData
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
          description: Antal dagar att hämta data för (standard: 1)
      responses:
        "200":
          description: Sammanfattad Fitbit-data (steg, kalorier, sömn, puls)
          content: { application/json: { schema: { type: object } } }
      x-openai-isConsequential: false

  /data/extended:
    get:
      summary: Hämta detaljerad Fitbit-data
      operationId: getExtendedData
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
          description: Antal dagar om `target_date` inte anges
        - name: target_date
          in: query
          schema: { type: string, format: date }
          description: Specifikt datum (YYYY-MM-DD) – åsidosätter `days`
      responses:
        "200":
          description: |
            Detaljerad Fitbit-data:
            • steg, kalorier, sömn, puls  
            • vikt, HRV  
            • senaste träningspass (activity_logs)
          content: { application/json: { schema: { type: object } } }
      x-openai-isConsequential: false

  /data/steps:
    get:
      summary: Hämta stegdata för ett datum
      operationId: getSteps
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200": { description: Stegdata, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

  /data/sleep:
    get:
      summary: Hämta sömndata för ett datum
      operationId: getSleep
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200": { description: Sömndata, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

  /data/heart:
    get:
      summary: Hämta hjärtfrekvensdata för ett datum
      operationId: getHeart
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200": { description: Hjärtfrekvensdata, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

  /data/calories:
    get:
      summary: Hämta kaloridata för ett datum
      operationId: getCalories
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200": { description: Kaloridata, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

  /log/meal:
    post:
      summary: Logga en eller flera måltider
      operationId: logMeals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { $ref: "#/components/schemas/MealLog" }
      responses:
        "200": { description: Bekräftelse på sparade måltider, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

    get:
      summary: Hämta alla måltider för ett datum
      operationId: getMeals
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200":
          description: Lista av måltider
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/MealLog" }
      x-openai-isConsequential: false

  /log/workout:
    post:
      summary: Logga ett eller flera träningspass
      operationId: logWorkouts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: { $ref: "#/components/schemas/WorkoutLog" }
      responses:
        "200": { description: Bekräftelse på sparade träningspass, content: { application/json: { schema: { type: object } } } }
      x-openai-isConsequential: false

    get:
      summary: Hämta träningspass för ett datum
      operationId: getWorkouts
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200":
          description: Lista av träningspass
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/WorkoutLog" }
      x-openai-isConsequential: false

components:
  schemas:
    MealLog:
      type: object
      required: [date, meal, items]
      properties:
        date:   { type: string, format: date, description: Datum (YYYY-MM-DD) }
        meal:   { type: string, description: Typ av mål (Frukost, Lunch, …) }
        items:  { type: string, description: Livsmedel och mängder }
        estimated_calories:
          type: integer
          description: Uppskattat kaloriinnehåll (frivilligt, hellre något högre)

    WorkoutLog:
      type: object
      required: [date, type, details]
      properties:
        date:   { type: string, format: date, description: Datum (YYYY-MM-DD) }
        type:   { type: string, description: Träningstyp (Styrka, Cardio, …) }
        details:{ type: string, description: Exempel – “Marklyft 100 kg × 3” }
