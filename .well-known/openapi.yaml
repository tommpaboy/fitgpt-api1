openapi: 3.1.0
info:
  title: FitGPT API
  version: 1.1.9
  description: |
    End-points för Fitbit-data **plus** manuellt loggade måltider & tränings­pass.

servers:
  - url: https://fitgpt-2364.onrender.com

components:
  schemas:
    # ett “catch-all”-schema så Buildern slipper klaga
    GenericObject:
      type: object
      description: Släpps igenom vilket JSON-objekt som helst
      additionalProperties: true

    MealLog:
      type: object
      required: [date, meal, items]
      properties:
        date: { type: string, format: date }
        meal: { type: string }
        items: { type: string }
        estimated_calories:
          type: integer
          nullable: true

    WorkoutLog:
      type: object
      required: [date, workout_type, details]
      properties:
        date:        { type: string, format: date }
        workout_type:{ type: string }
        details:     { type: string }

paths:
  /daily-summary:
    get:
      summary: Samlad dagsdata (Fitbit + Firestore)
      operationId: getDailySummary
      parameters:
        - name: date
          in: query
          schema: { type: string, format: date }
          required: false
          description: Datum (YYYY-MM-DD). Default = idag.
      responses:
        "200":
          description: Dagsdata
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GenericObject' }
      x-openai-isConsequential: false

  /data:
    get:
      summary: Kort Fitbit-översikt
      operationId: getFitbitSummary
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
      responses:
        "200":
          description: Fitbit-summering
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GenericObject' }
      x-openai-isConsequential: false

  /data/extended:
    get:
      summary: Detaljerad Fitbit-data
      operationId: getFitbitExtended
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
        - name: target_date
          in: query
          schema: { type: string, format: date }
          description: Åsidosätter `days`
      responses:
        "200":
          description: Detaljerad Fitbit-data
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GenericObject' }
      x-openai-isConsequential: false

  /log/meal:
    post:
      summary: Logga måltid(er)
      operationId: postMeals
      requestBody:
        required: true
        content:
          application/json:   # enstaka objekt
            schema: { $ref: '#/components/schemas/MealLog' }
          application/x.ndjson: # rad-separerad lista (Swagger test-vänligt)
            schema:
              type: array
              items: { $ref: '#/components/schemas/MealLog' }
      responses:
        "200":
          description: Sparat
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GenericObject' }
      x-openai-isConsequential: false

    get:
      summary: Hämta måltider för ett datum
      operationId: getMeals
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
      responses:
        "200":
          description: Lista av måltider
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/MealLog' }
      x-openai-isConsequential: false

  /log/workout:
    post:
      summary: Logga träningspass
      operationId: postWorkouts
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/WorkoutLog' }
          application/x.ndjson:
            schema:
              type: array
              items: { $ref: '#/components/schemas/WorkoutLog' }
      responses:
        "200":
          description: Sparat
          content:
            application/json:
              schema: { $ref: '#/components/schemas/GenericObject' }
      x-openai-isConsequential: false

    get:
      summary: Hämta pass för ett datum
      operationId: getWorkouts
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
      responses:
        "200":
          description: Lista av pass
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/WorkoutLog' }
      x-openai-isConsequential: false
