openapi: "3.1.0"

info:
  title: FitGPT API
  version: "1.1.6"
  description: |
    API för Fitbit-data **plus** manuellt loggade måltider & pass.

    • **/daily-summary**  – allt för ett datum i ett anrop  
    • **/data**           – kort Fitbit-summering över X dagar  
    • **/data/extended**  – detaljerad Fitbit-data  
    • **/log/meal**       – logga / hämta måltider  
    • **/log/workout**    – logga / hämta träningspass

servers:
  - url: https://fitgpt-2364.onrender.com

paths:
  # ---------- 1. ONE-STOP DAGSDATA ----------
  /daily-summary:
    get:
      summary: Samlad dagsdata (Fitbit + Firestore)
      operationId: getDailySummary
      parameters:
        - name: date
          in: query
          required: false
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD). Default = idag.
      responses:
        "200":
          description: Fitbit-data, måltider och träningspass för datumet
          content:
            application/json:
              schema: { type: object }
      x-openai-isConsequential: false

  # ---------- 2. FITBIT SAMMANFATTNING ----------
  /data:
    get:
      summary: Hämta sammanfattad Fitbit-data
      operationId: getCombinedData
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
          description: Antal dagar (default 1)
      responses:
        "200":
          description: Steg / kalorier / sömn / puls
          content:
            application/json:
              schema: { type: object }
      x-openai-isConsequential: false

  # ---------- 3. FITBIT DETALJER ----------
  /data/extended:
    get:
      summary: Hämta detaljerad Fitbit-data
      operationId: getExtendedData
      parameters:
        - name: days
          in: query
          schema: { type: integer, default: 1, minimum: 1, maximum: 30 }
          description: Antal dagar om `target_date` inte anges
        - name: target_date
          in: query
          schema: { type: string, format: date }
          description: Specifikt datum (YYYY-MM-DD) – åsidosätter `days`
      responses:
        "200":
          description: Komplett Fitbit-dataset + senaste träningslogg
          content:
            application/json:
              schema: { type: object }
      x-openai-isConsequential: false

  # ---------- 4. MÅLTIDER ----------
  /log/meal:
    post:
      summary: Logga måltid eller måltider
      operationId: logMeals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/MealLog"
                - type: array
                  items: { $ref: "#/components/schemas/MealLog" }
      responses:
        "200":
          description: Bekräftelse på sparade måltider
          content:
            application/json:
              schema: { type: object }
      x-openai-isConsequential: false

    get:
      summary: Hämta måltider för ett datum
      operationId: getMeals
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200":
          description: Lista av måltider
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/MealLog" }
      x-openai-isConsequential: false

  # ---------- 5. TRÄNINGSPASS ----------
  /log/workout:
    post:
      summary: Logga träningspass
      operationId: logWorkouts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/WorkoutLog"
                - type: array
                  items: { $ref: "#/components/schemas/WorkoutLog" }
      responses:
        "200":
          description: Bekräftelse på sparade pass
          content:
            application/json:
              schema: { type: object }
      x-openai-isConsequential: false

    get:
      summary: Hämta pass för ett datum
      operationId: getWorkouts
      parameters:
        - name: date
          in: query
          required: true
          schema: { type: string, format: date }
          description: Datum (YYYY-MM-DD)
      responses:
        "200":
          description: Lista av pass
          content:
            application/json:
              schema:
                type: array
                items: { $ref: "#/components/schemas/WorkoutLog" }
      x-openai-isConsequential: false

components:
  schemas:
    MealLog:
      type: object
      required: [date, meal, items]
      properties:
        date:   { type: string, format: date,  description: Datum (YYYY-MM-DD) }
        meal:   { type: string, description: Typ av mål (Frukost, Lunch …) }
        items:  { type: string, description: Livsmedel och mängder }
        estimated_calories:
          type: integer
          nullable: true
          description: Grov kaloriuppskattning

    WorkoutLog:
      type: object
      required: [date, type, details]
      properties:
        date:   { type: string, format: date,  description: Datum (YYYY-MM-DD) }
        type:   { type: string, description: Träningstyp (Styrka, Cardio …) }
        details:{ type: string, description: Exempel – ”Marklyft 100 kg × 3” }
